{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet timeDifference;\nconst inputDateTime = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button');\nconst timer = document.querySelectorAll('.value');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    timeDifference = userSelectedDate - options.defaultDate;\n\n    if (timeDifference < 1) {\n      iziToast.error({\n        color: 'red',\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      });\n      startButton.disabled = true;\n      inputDateTime.disabled = false;\n    } else {\n      startButton.disabled = false;\n      inputDateTime.disabled = false;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst calendar = flatpickr('#datetime-picker', options);\nstartButton.disabled = true;\n\nstartButton.addEventListener('click', event => {\n  const countdown = setInterval(() => {\n    timeDifference = userSelectedDate - new Date();\n    inputDateTime.disabled = true;\n    startButton.disabled = true;\n\n    if (timeDifference < 1) {\n      startButton.disabled = true;\n      inputDateTime.disabled = false;\n      clearInterval(countdown);\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n\n    timer[0].innerText = time.days.toString().padStart(2, '0');\n    timer[1].innerText = time.hours.toString().padStart(2, '0');\n    timer[2].innerText = time.minutes.toString().padStart(2, '0');\n    timer[3].innerText = time.seconds.toString().padStart(2, '0');\n  }, 1000);\n});\n"],"names":["userSelectedDate","timeDifference","inputDateTime","startButton","timer","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","flatpickr","event","countdown","time"],"mappings":"0IAMA,IAAIA,EACAC,EACJ,MAAMC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAQ,SAAS,iBAAiB,QAAQ,EAE1CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BN,EAAmBM,EAAc,CAAC,EAClCL,EAAiBD,EAAmBK,EAAQ,YAExCJ,EAAiB,GACnBM,EAAS,MAAM,CACb,MAAO,MACP,SAAU,WACV,QAAS,oCACjB,CAAO,EACDJ,EAAY,SAAW,GACvBD,EAAc,SAAW,KAEzBC,EAAY,SAAW,GACvBD,EAAc,SAAW,GAE5B,CACH,EAEA,SAASM,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEiBC,EAAU,mBAAoBT,CAAO,EACtDF,EAAY,SAAW,GAEvBA,EAAY,iBAAiB,QAASY,GAAS,CAC7C,MAAMC,EAAY,YAAY,IAAM,CAKlC,GAJAf,EAAiBD,EAAmB,IAAI,KACxCE,EAAc,SAAW,GACzBC,EAAY,SAAW,GAEnBF,EAAiB,EAAG,CACtBE,EAAY,SAAW,GACvBD,EAAc,SAAW,GACzB,cAAcc,CAAS,EACvB,MACD,CAED,MAAMC,EAAOT,EAAUP,CAAc,EAErCG,EAAM,CAAC,EAAE,UAAYa,EAAK,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACzDb,EAAM,CAAC,EAAE,UAAYa,EAAK,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1Db,EAAM,CAAC,EAAE,UAAYa,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5Db,EAAM,CAAC,EAAE,UAAYa,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAC7D,EAAE,GAAI,CACT,CAAC"}